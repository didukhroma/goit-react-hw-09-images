{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/App/App.module.css","components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Searchbar/Searchbar.jsx","utils/api/apiService.js","settings/settings.js","components/Modal/Modal.jsx","components/Button/Button.jsx","utils/scroll/scroll.js","components/App/App.jsx","index.js"],"names":["module","exports","ImageGalleryItem","src","tags","modalImg","toggleModal","className","styles","onClick","alt","ImageGalleryItem__image","ImageGallery","images","map","id","webformatURL","largeImageURL","App","type","color","height","width","timeout","Component","Searchbar","onSubmit","isLoading","useState","query","setQuery","SearchForm","event","preventDefault","SearchForm__button","SearchForm__button__label","SearchForm__input","autoComplete","autoFocus","placeholder","onChange","value","target","options","apiService","page","a","request","axios","get","response","hits","data","alert","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","Overlay","Button","title","handleClickLoadMore","scroll","documentElement","scrollHeight","scrollTo","top","behavior","setImages","showModal","setShowModal","modalPic","setModalPic","modalAltText","setModalAltText","currentPage","setCurrentPage","error","setError","setIsLoading","useEffect","getImages","length","dataImages","text","toLowerCase","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b2f97da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2UgwJ\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__A5DxV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2s5Gf\",\"Modal\":\"Modal_Modal__16Hed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3DIZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__34I0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1s2JA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__VT3-X\",\"SearchForm\":\"Searchbar_SearchForm__2tIfb\",\"SearchForm__button\":\"Searchbar_SearchForm__button__1VSr5\",\"SearchForm__button__label\":\"Searchbar_SearchForm__button__label__2ugNi\",\"SearchForm__input\":\"Searchbar_SearchForm__input__3AOif\"};","import styles from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\nconst ImageGalleryItem = ({ src, tags, modalImg, toggleModal }) => {\n  const handleClick = () => {\n    toggleModal(modalImg, tags);\n  };\n  return (\n    <li className={styles.ImageGalleryItem} onClick={handleClick}>\n      <img src={src} alt={tags} className={styles.ImageGalleryItem__image} />\n    </li>\n  );\n};\nImageGalleryItem.propTypes = {\n  src: PropTypes.string,\n  tags: PropTypes.string,\n  modalImg: PropTypes.string,\n  toggleModal: PropTypes.func,\n};\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, toggleModal }) => {\n  return (\n    <ul className={styles.ImageGallery}>\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          src={webformatURL}\n          alt={tags}\n          modalImg={largeImageURL}\n          toggleModal={toggleModal}\n        />\n      ))}\n    </ul>\n  );\n};\nImageGallery.propTypes = {\n  images: PropTypes.array,\n  toggleModal: PropTypes.func,\n};\nexport default ImageGallery;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nexport default class App extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height={40}\n        width={40}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}\n","import { useState } from 'react';\nimport Loader from '../Loader';\nimport styles from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\nconst INITIAL_STATE = '';\n\nconst Searchbar = ({ onSubmit, isLoading }) => {\n  const [query, setQuery] = useState(INITIAL_STATE);\n\n  const handleChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setQuery(value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n    setQuery(INITIAL_STATE);\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchForm__button}>\n          <span className={styles.SearchForm__button__label}>Search</span>\n        </button>\n\n        <input\n          className={styles.SearchForm__input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n          value={query}\n        />\n        {isLoading && <Loader />}\n      </form>\n    </header>\n  );\n};\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\nexport default Searchbar;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from '../../settings/settings';\nconst options = {\n  imageType: 'photo',\n  orientation: 'horizontal',\n  resultsPerPage: 12,\n};\nconst apiService = async (query, page) => {\n  const request = `${BASE_URL}?image_type=${options.imageType}&orientation=${options.orientation}&q=${query}&page=${page}&per_page=${options.resultsPerPage}&key=${API_KEY}`;\n  try {\n    const response = await axios.get(request);\n    const {\n      data: { hits },\n    } = response;\n    return hits;\n  } catch (error) {\n    alert('Please enter a more specific word');\n    return null;\n  }\n};\nexport default apiService;\n","export const API_KEY = '20604497-76eef09585394ebdddc8f0af4';\nexport const BASE_URL = 'https://pixabay.com/api/';\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    const { target, currentTarget } = event;\n\n    if (currentTarget === target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n        <div className={styles.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nModal.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  onClose: PropTypes.func,\n};\nexport default Modal;\n","import styles from './Button.module.css';\nimport PropTypes from 'prop-types';\nconst Button = ({ type = 'button', title = 'Button', handleClickLoadMore }) => {\n  const handlerClick = () => {\n    return handleClickLoadMore();\n  };\n  return (\n    <button type={type} onClick={handlerClick} className={styles.Button}>\n      {title}\n    </button>\n  );\n};\nButton.propTypes = {\n  type: PropTypes.string,\n  title: PropTypes.string,\n  handleClickLoadMore: PropTypes.func,\n};\nexport default Button;\n","const scroll = () => {\n  const height = document.documentElement.scrollHeight;\n  window.scrollTo({\n    top: height,\n    behavior: 'smooth',\n  });\n};\nexport default scroll;\n","import { useState, useEffect } from 'react';\nimport ImageGallery from '../ImageGallery';\nimport Searchbar from '../Searchbar';\nimport apiService from '../../utils/api/apiService';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\nimport scrollTo from '../../utils/scroll/scroll.js';\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalPic, setModalPic] = useState('');\n  const [modalAltText, setModalAltText] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getImages();\n    if (images.length !== 0) {\n      scrollTo();\n    }\n  }, [query]);\n\n  const getImages = async () => {\n    const dataImages = await apiService(query, currentPage);\n    if (!dataImages) {\n      setIsLoading(true);\n      return;\n    }\n    setImages([...images, ...dataImages]);\n    setCurrentPage(currentPage + 1);\n    setIsLoading(false);\n  };\n\n  const submitHandler = text => {\n    const isSpecificQuery =\n      text.toLowerCase() === query.toLowerCase() && images.length !== 0;\n    if (isSpecificQuery) {\n      setError(\n        'Please enter a more specific word or explore the button \"Load more\"',\n      );\n      alert(error);\n      return;\n    }\n    setQuery(text);\n    setImages([]);\n    setCurrentPage(1);\n    setError(null);\n  };\n\n  const toggleModal = (modalImg, tags) => {\n    setShowModal(!showModal);\n    setModalPic(modalImg);\n    setModalAltText(tags);\n  };\n\n  const handleClickLoadMore = () => {\n    setIsLoading(true);\n    getImages();\n  };\n\n  return (\n    <div className={styles.App}>\n      <Searchbar onSubmit={submitHandler} isLoading={isLoading} />\n      <ImageGallery images={images} toggleModal={toggleModal} />\n      {showModal && (\n        <Modal src={modalPic} alt={modalAltText} onClose={toggleModal} />\n      )}\n      {images.length !== 0 && (\n        <Button title={'Load more'} handleClickLoadMore={handleClickLoadMore} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}